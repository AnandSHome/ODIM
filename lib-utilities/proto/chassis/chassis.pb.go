// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chassis/chassis.proto

package chassis

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetChassisRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	RequestParam         string   `protobuf:"bytes,2,opt,name=requestParam,proto3" json:"requestParam,omitempty"`
	URL                  string   `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
	ResourceID           string   `protobuf:"bytes,4,opt,name=resourceID,proto3" json:"resourceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChassisRequest) Reset()         { *m = GetChassisRequest{} }
func (m *GetChassisRequest) String() string { return proto.CompactTextString(m) }
func (*GetChassisRequest) ProtoMessage()    {}
func (*GetChassisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16e77d83c773e08f, []int{0}
}

func (m *GetChassisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChassisRequest.Unmarshal(m, b)
}
func (m *GetChassisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChassisRequest.Marshal(b, m, deterministic)
}
func (m *GetChassisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChassisRequest.Merge(m, src)
}
func (m *GetChassisRequest) XXX_Size() int {
	return xxx_messageInfo_GetChassisRequest.Size(m)
}
func (m *GetChassisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChassisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetChassisRequest proto.InternalMessageInfo

func (m *GetChassisRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *GetChassisRequest) GetRequestParam() string {
	if m != nil {
		return m.RequestParam
	}
	return ""
}

func (m *GetChassisRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *GetChassisRequest) GetResourceID() string {
	if m != nil {
		return m.ResourceID
	}
	return ""
}

type GetChassisResponse struct {
	StatusCode           int32             `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusMessage        string            `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	Header               map[string]string `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetChassisResponse) Reset()         { *m = GetChassisResponse{} }
func (m *GetChassisResponse) String() string { return proto.CompactTextString(m) }
func (*GetChassisResponse) ProtoMessage()    {}
func (*GetChassisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_16e77d83c773e08f, []int{1}
}

func (m *GetChassisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChassisResponse.Unmarshal(m, b)
}
func (m *GetChassisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChassisResponse.Marshal(b, m, deterministic)
}
func (m *GetChassisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChassisResponse.Merge(m, src)
}
func (m *GetChassisResponse) XXX_Size() int {
	return xxx_messageInfo_GetChassisResponse.Size(m)
}
func (m *GetChassisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChassisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetChassisResponse proto.InternalMessageInfo

func (m *GetChassisResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *GetChassisResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *GetChassisResponse) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetChassisResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type CreateChassisRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	RequestBody          []byte   `protobuf:"bytes,2,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateChassisRequest) Reset()         { *m = CreateChassisRequest{} }
func (m *CreateChassisRequest) String() string { return proto.CompactTextString(m) }
func (*CreateChassisRequest) ProtoMessage()    {}
func (*CreateChassisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16e77d83c773e08f, []int{2}
}

func (m *CreateChassisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateChassisRequest.Unmarshal(m, b)
}
func (m *CreateChassisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateChassisRequest.Marshal(b, m, deterministic)
}
func (m *CreateChassisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateChassisRequest.Merge(m, src)
}
func (m *CreateChassisRequest) XXX_Size() int {
	return xxx_messageInfo_CreateChassisRequest.Size(m)
}
func (m *CreateChassisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateChassisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateChassisRequest proto.InternalMessageInfo

func (m *CreateChassisRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *CreateChassisRequest) GetRequestBody() []byte {
	if m != nil {
		return m.RequestBody
	}
	return nil
}

type DeleteChassisRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	URL                  string   `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChassisRequest) Reset()         { *m = DeleteChassisRequest{} }
func (m *DeleteChassisRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteChassisRequest) ProtoMessage()    {}
func (*DeleteChassisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16e77d83c773e08f, []int{3}
}

func (m *DeleteChassisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChassisRequest.Unmarshal(m, b)
}
func (m *DeleteChassisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChassisRequest.Marshal(b, m, deterministic)
}
func (m *DeleteChassisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChassisRequest.Merge(m, src)
}
func (m *DeleteChassisRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteChassisRequest.Size(m)
}
func (m *DeleteChassisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChassisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChassisRequest proto.InternalMessageInfo

func (m *DeleteChassisRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *DeleteChassisRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type UpdateChassisRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	URL                  string   `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	RequestBody          []byte   `protobuf:"bytes,3,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateChassisRequest) Reset()         { *m = UpdateChassisRequest{} }
func (m *UpdateChassisRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateChassisRequest) ProtoMessage()    {}
func (*UpdateChassisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16e77d83c773e08f, []int{4}
}

func (m *UpdateChassisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChassisRequest.Unmarshal(m, b)
}
func (m *UpdateChassisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChassisRequest.Marshal(b, m, deterministic)
}
func (m *UpdateChassisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChassisRequest.Merge(m, src)
}
func (m *UpdateChassisRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateChassisRequest.Size(m)
}
func (m *UpdateChassisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChassisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChassisRequest proto.InternalMessageInfo

func (m *UpdateChassisRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *UpdateChassisRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *UpdateChassisRequest) GetRequestBody() []byte {
	if m != nil {
		return m.RequestBody
	}
	return nil
}

func init() {
	proto.RegisterType((*GetChassisRequest)(nil), "GetChassisRequest")
	proto.RegisterType((*GetChassisResponse)(nil), "GetChassisResponse")
	proto.RegisterMapType((map[string]string)(nil), "GetChassisResponse.HeaderEntry")
	proto.RegisterType((*CreateChassisRequest)(nil), "CreateChassisRequest")
	proto.RegisterType((*DeleteChassisRequest)(nil), "DeleteChassisRequest")
	proto.RegisterType((*UpdateChassisRequest)(nil), "UpdateChassisRequest")
}

func init() { proto.RegisterFile("chassis/chassis.proto", fileDescriptor_16e77d83c773e08f) }

var fileDescriptor_16e77d83c773e08f = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5d, 0x8b, 0xda, 0x40,
	0x14, 0x6d, 0x12, 0xb5, 0xf4, 0xaa, 0xa5, 0xbd, 0x4d, 0x20, 0xf8, 0xd0, 0x4a, 0xe8, 0x83, 0x4f,
	0x29, 0xd8, 0x87, 0x7e, 0x51, 0x4a, 0x1b, 0x4b, 0x2b, 0x58, 0x28, 0xa1, 0xbe, 0xf5, 0x65, 0x34,
	0xb7, 0x55, 0xcc, 0x66, 0xdc, 0x99, 0xc9, 0x82, 0xbf, 0x60, 0x9f, 0xf6, 0x4f, 0xee, 0x2f, 0x59,
	0x32, 0xc9, 0xae, 0x89, 0x66, 0x05, 0x65, 0x9f, 0x72, 0xe7, 0xcc, 0x39, 0x77, 0x4e, 0xe6, 0x5c,
	0x06, 0x9c, 0xf9, 0x82, 0x49, 0xb9, 0x94, 0x6f, 0x8a, 0xaf, 0xbf, 0x16, 0x5c, 0x71, 0xef, 0xca,
	0x80, 0xe7, 0x3f, 0x48, 0x05, 0x39, 0x18, 0xd2, 0x79, 0x4a, 0x52, 0xa1, 0x07, 0x1d, 0x49, 0x52,
	0x2e, 0x79, 0xf2, 0x87, 0xaf, 0x28, 0x71, 0x8d, 0xbe, 0x31, 0x78, 0x12, 0x56, 0xb0, 0x8c, 0x23,
	0x72, 0xfa, 0x6f, 0x26, 0xd8, 0x99, 0x6b, 0xe6, 0x9c, 0x32, 0x86, 0xcf, 0xc0, 0x9a, 0x86, 0x13,
	0xd7, 0xd2, 0x5b, 0x59, 0x89, 0x2f, 0x01, 0x04, 0x49, 0x9e, 0x8a, 0x39, 0x8d, 0x47, 0x6e, 0x43,
	0x6f, 0x94, 0x10, 0xef, 0xda, 0x00, 0x2c, 0xfb, 0x91, 0x6b, 0x9e, 0x48, 0xca, 0x64, 0x52, 0x31,
	0x95, 0xca, 0x80, 0x47, 0xa4, 0xed, 0x34, 0xc3, 0x12, 0x82, 0xaf, 0xa1, 0x9b, 0xaf, 0x7e, 0x91,
	0x94, 0xec, 0x3f, 0x15, 0x6e, 0xaa, 0x20, 0xbe, 0x83, 0xd6, 0x82, 0x58, 0x44, 0xc2, 0xb5, 0xfa,
	0xd6, 0xa0, 0x3d, 0x7c, 0xe5, 0xef, 0x1f, 0xe5, 0xff, 0xd4, 0x8c, 0xef, 0x89, 0x12, 0x9b, 0xb0,
	0xa0, 0x23, 0x42, 0x63, 0xc6, 0xa3, 0x8d, 0xf6, 0xdb, 0x09, 0x75, 0xdd, 0xfb, 0x00, 0xed, 0x12,
	0x35, 0xfb, 0xd5, 0x15, 0x6d, 0x8a, 0x9b, 0xca, 0x4a, 0xb4, 0xa1, 0x79, 0xc1, 0xe2, 0xf4, 0xd6,
	0x4b, 0xbe, 0xf8, 0x68, 0xbe, 0x37, 0xbc, 0xbf, 0x60, 0x07, 0x82, 0x98, 0xa2, 0x13, 0xae, 0xbd,
	0x0f, 0xed, 0x82, 0xfe, 0x2d, 0x73, 0x64, 0x6a, 0x47, 0x65, 0xc8, 0x9b, 0x80, 0x3d, 0xa2, 0x98,
	0x4e, 0xea, 0x5e, 0x04, 0x66, 0xde, 0x05, 0xe6, 0x25, 0x60, 0x4f, 0xd7, 0x11, 0x7b, 0x98, 0x6e,
	0xbb, 0xee, 0xad, 0x3d, 0xf7, 0xc3, 0x4b, 0x0b, 0x1e, 0x17, 0x47, 0xe1, 0x57, 0xb0, 0xb7, 0x01,
	0x05, 0x3c, 0x8e, 0x69, 0xae, 0x96, 0x3c, 0x41, 0xf4, 0xf7, 0x46, 0xb6, 0xf7, 0xa2, 0x26, 0x4b,
	0xef, 0x11, 0x7e, 0xd9, 0x19, 0x27, 0x3d, 0x67, 0xc7, 0x34, 0xf8, 0x04, 0x4f, 0xb7, 0xf8, 0x38,
	0xf9, 0xc7, 0x8f, 0x11, 0x7f, 0x86, 0x6e, 0x25, 0x68, 0x74, 0xfc, 0xba, 0xe0, 0x0f, 0xc8, 0x2b,
	0x49, 0xa2, 0xe3, 0xd7, 0x25, 0x7b, 0x40, 0x5e, 0x89, 0x0e, 0x1d, 0xbf, 0x2e, 0xca, 0x7b, 0xe4,
	0xb3, 0x96, 0x7e, 0x21, 0xde, 0xde, 0x04, 0x00, 0x00, 0xff, 0xff, 0x49, 0x93, 0x51, 0xce, 0x3a,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChassisClient is the client API for Chassis service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChassisClient interface {
	GetChassisCollection(ctx context.Context, in *GetChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error)
	GetChassisResource(ctx context.Context, in *GetChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error)
	GetChassisInfo(ctx context.Context, in *GetChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error)
	CreateChassis(ctx context.Context, in *CreateChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error)
	DeleteChassis(ctx context.Context, in *DeleteChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error)
	UpdateChassis(ctx context.Context, in *UpdateChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error)
}

type chassisClient struct {
	cc *grpc.ClientConn
}

func NewChassisClient(cc *grpc.ClientConn) ChassisClient {
	return &chassisClient{cc}
}

func (c *chassisClient) GetChassisCollection(ctx context.Context, in *GetChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error) {
	out := new(GetChassisResponse)
	err := c.cc.Invoke(ctx, "/Chassis/GetChassisCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chassisClient) GetChassisResource(ctx context.Context, in *GetChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error) {
	out := new(GetChassisResponse)
	err := c.cc.Invoke(ctx, "/Chassis/GetChassisResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chassisClient) GetChassisInfo(ctx context.Context, in *GetChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error) {
	out := new(GetChassisResponse)
	err := c.cc.Invoke(ctx, "/Chassis/GetChassisInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chassisClient) CreateChassis(ctx context.Context, in *CreateChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error) {
	out := new(GetChassisResponse)
	err := c.cc.Invoke(ctx, "/Chassis/CreateChassis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chassisClient) DeleteChassis(ctx context.Context, in *DeleteChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error) {
	out := new(GetChassisResponse)
	err := c.cc.Invoke(ctx, "/Chassis/DeleteChassis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chassisClient) UpdateChassis(ctx context.Context, in *UpdateChassisRequest, opts ...grpc.CallOption) (*GetChassisResponse, error) {
	out := new(GetChassisResponse)
	err := c.cc.Invoke(ctx, "/Chassis/UpdateChassis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChassisServer is the server API for Chassis service.
type ChassisServer interface {
	GetChassisCollection(context.Context, *GetChassisRequest) (*GetChassisResponse, error)
	GetChassisResource(context.Context, *GetChassisRequest) (*GetChassisResponse, error)
	GetChassisInfo(context.Context, *GetChassisRequest) (*GetChassisResponse, error)
	CreateChassis(context.Context, *CreateChassisRequest) (*GetChassisResponse, error)
	DeleteChassis(context.Context, *DeleteChassisRequest) (*GetChassisResponse, error)
	UpdateChassis(context.Context, *UpdateChassisRequest) (*GetChassisResponse, error)
}

// UnimplementedChassisServer can be embedded to have forward compatible implementations.
type UnimplementedChassisServer struct {
}

func (*UnimplementedChassisServer) GetChassisCollection(ctx context.Context, req *GetChassisRequest) (*GetChassisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChassisCollection not implemented")
}
func (*UnimplementedChassisServer) GetChassisResource(ctx context.Context, req *GetChassisRequest) (*GetChassisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChassisResource not implemented")
}
func (*UnimplementedChassisServer) GetChassisInfo(ctx context.Context, req *GetChassisRequest) (*GetChassisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChassisInfo not implemented")
}
func (*UnimplementedChassisServer) CreateChassis(ctx context.Context, req *CreateChassisRequest) (*GetChassisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChassis not implemented")
}
func (*UnimplementedChassisServer) DeleteChassis(ctx context.Context, req *DeleteChassisRequest) (*GetChassisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChassis not implemented")
}
func (*UnimplementedChassisServer) UpdateChassis(ctx context.Context, req *UpdateChassisRequest) (*GetChassisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChassis not implemented")
}

func RegisterChassisServer(s *grpc.Server, srv ChassisServer) {
	s.RegisterService(&_Chassis_serviceDesc, srv)
}

func _Chassis_GetChassisCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChassisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChassisServer).GetChassisCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chassis/GetChassisCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChassisServer).GetChassisCollection(ctx, req.(*GetChassisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chassis_GetChassisResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChassisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChassisServer).GetChassisResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chassis/GetChassisResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChassisServer).GetChassisResource(ctx, req.(*GetChassisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chassis_GetChassisInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChassisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChassisServer).GetChassisInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chassis/GetChassisInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChassisServer).GetChassisInfo(ctx, req.(*GetChassisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chassis_CreateChassis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateChassisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChassisServer).CreateChassis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chassis/CreateChassis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChassisServer).CreateChassis(ctx, req.(*CreateChassisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chassis_DeleteChassis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChassisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChassisServer).DeleteChassis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chassis/DeleteChassis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChassisServer).DeleteChassis(ctx, req.(*DeleteChassisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chassis_UpdateChassis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateChassisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChassisServer).UpdateChassis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chassis/UpdateChassis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChassisServer).UpdateChassis(ctx, req.(*UpdateChassisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chassis_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Chassis",
	HandlerType: (*ChassisServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChassisCollection",
			Handler:    _Chassis_GetChassisCollection_Handler,
		},
		{
			MethodName: "GetChassisResource",
			Handler:    _Chassis_GetChassisResource_Handler,
		},
		{
			MethodName: "GetChassisInfo",
			Handler:    _Chassis_GetChassisInfo_Handler,
		},
		{
			MethodName: "CreateChassis",
			Handler:    _Chassis_CreateChassis_Handler,
		},
		{
			MethodName: "DeleteChassis",
			Handler:    _Chassis_DeleteChassis_Handler,
		},
		{
			MethodName: "UpdateChassis",
			Handler:    _Chassis_UpdateChassis_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chassis/chassis.proto",
}
