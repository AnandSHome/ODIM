// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/session/session.proto

package session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SessionCreateRequest struct {
	RequestBody          []byte   `protobuf:"bytes,1,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionCreateRequest) Reset()         { *m = SessionCreateRequest{} }
func (m *SessionCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SessionCreateRequest) ProtoMessage()    {}
func (*SessionCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_090d37272f6e4da6, []int{0}
}

func (m *SessionCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionCreateRequest.Unmarshal(m, b)
}
func (m *SessionCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionCreateRequest.Marshal(b, m, deterministic)
}
func (m *SessionCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionCreateRequest.Merge(m, src)
}
func (m *SessionCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SessionCreateRequest.Size(m)
}
func (m *SessionCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionCreateRequest proto.InternalMessageInfo

func (m *SessionCreateRequest) GetRequestBody() []byte {
	if m != nil {
		return m.RequestBody
	}
	return nil
}

type SessionUserName struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionUserName) Reset()         { *m = SessionUserName{} }
func (m *SessionUserName) String() string { return proto.CompactTextString(m) }
func (*SessionUserName) ProtoMessage()    {}
func (*SessionUserName) Descriptor() ([]byte, []int) {
	return fileDescriptor_090d37272f6e4da6, []int{1}
}

func (m *SessionUserName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionUserName.Unmarshal(m, b)
}
func (m *SessionUserName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionUserName.Marshal(b, m, deterministic)
}
func (m *SessionUserName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionUserName.Merge(m, src)
}
func (m *SessionUserName) XXX_Size() int {
	return xxx_messageInfo_SessionUserName.Size(m)
}
func (m *SessionUserName) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionUserName.DiscardUnknown(m)
}

var xxx_messageInfo_SessionUserName proto.InternalMessageInfo

func (m *SessionUserName) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type SessionCreateResponse struct {
	StatusCode           int32             `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusMessage        string            `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	SessionId            string            `protobuf:"bytes,3,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Header               map[string]string `protobuf:"bytes,5,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionCreateResponse) Reset()         { *m = SessionCreateResponse{} }
func (m *SessionCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SessionCreateResponse) ProtoMessage()    {}
func (*SessionCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_090d37272f6e4da6, []int{2}
}

func (m *SessionCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionCreateResponse.Unmarshal(m, b)
}
func (m *SessionCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionCreateResponse.Marshal(b, m, deterministic)
}
func (m *SessionCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionCreateResponse.Merge(m, src)
}
func (m *SessionCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SessionCreateResponse.Size(m)
}
func (m *SessionCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionCreateResponse proto.InternalMessageInfo

func (m *SessionCreateResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *SessionCreateResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *SessionCreateResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *SessionCreateResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *SessionCreateResponse) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

type SessionRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	SessionToken         string   `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest) Reset()         { *m = SessionRequest{} }
func (m *SessionRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequest) ProtoMessage()    {}
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_090d37272f6e4da6, []int{3}
}

func (m *SessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest.Unmarshal(m, b)
}
func (m *SessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest.Marshal(b, m, deterministic)
}
func (m *SessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest.Merge(m, src)
}
func (m *SessionRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequest.Size(m)
}
func (m *SessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest proto.InternalMessageInfo

func (m *SessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *SessionRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type SessionResponse struct {
	StatusCode           int32             `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusMessage        string            `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	Header               map[string]string `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SessionResponse) Reset()         { *m = SessionResponse{} }
func (m *SessionResponse) String() string { return proto.CompactTextString(m) }
func (*SessionResponse) ProtoMessage()    {}
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_090d37272f6e4da6, []int{4}
}

func (m *SessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse.Unmarshal(m, b)
}
func (m *SessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse.Marshal(b, m, deterministic)
}
func (m *SessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse.Merge(m, src)
}
func (m *SessionResponse) XXX_Size() int {
	return xxx_messageInfo_SessionResponse.Size(m)
}
func (m *SessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse proto.InternalMessageInfo

func (m *SessionResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *SessionResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *SessionResponse) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SessionResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*SessionCreateRequest)(nil), "SessionCreateRequest")
	proto.RegisterType((*SessionUserName)(nil), "SessionUserName")
	proto.RegisterType((*SessionCreateResponse)(nil), "SessionCreateResponse")
	proto.RegisterMapType((map[string]string)(nil), "SessionCreateResponse.HeaderEntry")
	proto.RegisterType((*SessionRequest)(nil), "SessionRequest")
	proto.RegisterType((*SessionResponse)(nil), "SessionResponse")
	proto.RegisterMapType((map[string]string)(nil), "SessionResponse.HeaderEntry")
}

func init() { proto.RegisterFile("proto/session/session.proto", fileDescriptor_090d37272f6e4da6) }

var fileDescriptor_090d37272f6e4da6 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0xc5, 0x36, 0xd0, 0x32, 0x40, 0xa1, 0x2b, 0xa8, 0x2c, 0x17, 0x55, 0x68, 0xd5, 0x03, 0x97,
	0xba, 0x2a, 0xe5, 0x00, 0xf4, 0x52, 0x4a, 0x2b, 0xda, 0x43, 0x7b, 0x30, 0xcd, 0x07, 0x18, 0x3c,
	0x4a, 0x10, 0x8e, 0x4d, 0xbc, 0x6b, 0x24, 0x7e, 0x20, 0x5f, 0x99, 0x73, 0xbe, 0x23, 0x62, 0xbd,
	0xb6, 0xb1, 0xe5, 0x48, 0x44, 0xc9, 0xc9, 0x33, 0x4f, 0xf3, 0xe6, 0xcd, 0xbc, 0xb1, 0x0d, 0xef,
	0x77, 0x81, 0xcf, 0xfd, 0xcf, 0x0c, 0x19, 0xdb, 0xf8, 0x5e, 0xfc, 0x34, 0x05, 0x4a, 0xc7, 0xd0,
	0x59, 0x46, 0xc0, 0x3c, 0x40, 0x9b, 0xa3, 0x85, 0x37, 0x21, 0x32, 0x4e, 0xfa, 0x50, 0x97, 0xe1,
	0x0f, 0xdf, 0x39, 0xe8, 0x4a, 0x5f, 0x19, 0x34, 0xac, 0x53, 0x88, 0x7e, 0x82, 0x96, 0x64, 0x5e,
	0x30, 0x0c, 0xfe, 0xd9, 0xd7, 0x48, 0x0c, 0x78, 0x1d, 0xca, 0x58, 0x30, 0x6a, 0x56, 0x92, 0xd3,
	0x5b, 0x15, 0xba, 0x39, 0x25, 0xb6, 0xf3, 0x3d, 0x86, 0xe4, 0x03, 0x00, 0xe3, 0x36, 0x0f, 0xd9,
	0xdc, 0x77, 0x22, 0x5e, 0xc5, 0x3a, 0x41, 0xc8, 0x47, 0x68, 0x46, 0xd9, 0x5f, 0x64, 0xcc, 0xbe,
	0x44, 0x5d, 0x15, 0xad, 0xb3, 0x20, 0xe9, 0x41, 0x4d, 0x6e, 0xf6, 0xc7, 0xd1, 0x35, 0x51, 0x91,
	0x02, 0x84, 0x40, 0x79, 0x75, 0xdc, 0xa3, 0x2c, 0xf6, 0x10, 0x31, 0x99, 0x42, 0xf5, 0x0a, 0x6d,
	0x07, 0x03, 0xbd, 0xd2, 0xd7, 0x06, 0xf5, 0x21, 0x35, 0x0b, 0xe7, 0x33, 0x7f, 0x8b, 0xa2, 0x5f,
	0x1e, 0x0f, 0x0e, 0x96, 0x64, 0x18, 0x13, 0xa8, 0x9f, 0xc0, 0xa4, 0x0d, 0xda, 0x16, 0x0f, 0x72,
	0xe7, 0x63, 0x48, 0x3a, 0x50, 0xd9, 0xdb, 0x6e, 0x18, 0x0f, 0x1b, 0x25, 0x53, 0x75, 0xac, 0x50,
	0x0b, 0xde, 0x48, 0x9d, 0xd8, 0xeb, 0xcc, 0xe8, 0x4a, 0x7e, 0x74, 0x0a, 0x0d, 0x99, 0xfc, 0xf7,
	0xb7, 0xe8, 0xc9, 0x86, 0x19, 0x8c, 0xde, 0x29, 0xc9, 0x31, 0x5e, 0xd8, 0xd6, 0x51, 0x62, 0x92,
	0x26, 0x4c, 0xea, 0x99, 0x39, 0x9d, 0x22, 0x7b, 0x8a, 0xec, 0x7e, 0x86, 0x65, 0xc3, 0x7b, 0x15,
	0x5e, 0x49, 0x59, 0xf2, 0x1d, 0x9a, 0xd1, 0x7d, 0x62, 0xa0, 0x6b, 0x16, 0xbd, 0xc0, 0xc6, 0xbb,
	0xe2, 0x6b, 0xd2, 0x12, 0x19, 0x41, 0xf3, 0x27, 0xba, 0x98, 0x76, 0x68, 0x99, 0xd9, 0x83, 0x18,
	0xed, 0xfc, 0x92, 0xb4, 0x44, 0xbe, 0x41, 0x67, 0x81, 0x7c, 0xe6, 0xba, 0xb3, 0x35, 0xdf, 0xec,
	0x63, 0x2e, 0x3b, 0x8f, 0xfc, 0x05, 0x60, 0x81, 0xfc, 0x49, 0x7a, 0x13, 0x20, 0x29, 0x25, 0xf9,
	0xc2, 0x1e, 0xa7, 0xc6, 0x25, 0xb4, 0x44, 0xc6, 0xf0, 0x36, 0xa5, 0x2e, 0x31, 0xd8, 0x6f, 0xd6,
	0x78, 0x96, 0xe8, 0xaa, 0x2a, 0x7e, 0x0a, 0x5f, 0x1f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa9, 0xa3,
	0xb8, 0xee, 0x33, 0x04, 0x00, 0x00,
}
