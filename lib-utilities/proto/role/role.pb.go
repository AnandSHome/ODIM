// Code generated by protoc-gen-go. DO NOT EDIT.
// source: role/role.proto

package role

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Message for Create and Update Role request
type RoleRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	RequestBody          []byte   `protobuf:"bytes,2,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleRequest) Reset()         { *m = RoleRequest{} }
func (m *RoleRequest) String() string { return proto.CompactTextString(m) }
func (*RoleRequest) ProtoMessage()    {}
func (*RoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb80865a74c2c62, []int{0}
}

func (m *RoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleRequest.Unmarshal(m, b)
}
func (m *RoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleRequest.Marshal(b, m, deterministic)
}
func (m *RoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleRequest.Merge(m, src)
}
func (m *RoleRequest) XXX_Size() int {
	return xxx_messageInfo_RoleRequest.Size(m)
}
func (m *RoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleRequest proto.InternalMessageInfo

func (m *RoleRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *RoleRequest) GetRequestBody() []byte {
	if m != nil {
		return m.RequestBody
	}
	return nil
}

// Message for GetRole and GetAllRoles request
type GetRoleRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoleRequest) Reset()         { *m = GetRoleRequest{} }
func (m *GetRoleRequest) String() string { return proto.CompactTextString(m) }
func (*GetRoleRequest) ProtoMessage()    {}
func (*GetRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb80865a74c2c62, []int{1}
}

func (m *GetRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoleRequest.Unmarshal(m, b)
}
func (m *GetRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoleRequest.Marshal(b, m, deterministic)
}
func (m *GetRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoleRequest.Merge(m, src)
}
func (m *GetRoleRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoleRequest.Size(m)
}
func (m *GetRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoleRequest proto.InternalMessageInfo

func (m *GetRoleRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *GetRoleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Message for sending response
type RoleResponse struct {
	StatusCode           int32             `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusMessage        string            `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	Header               map[string]string `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RoleResponse) Reset()         { *m = RoleResponse{} }
func (m *RoleResponse) String() string { return proto.CompactTextString(m) }
func (*RoleResponse) ProtoMessage()    {}
func (*RoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb80865a74c2c62, []int{2}
}

func (m *RoleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleResponse.Unmarshal(m, b)
}
func (m *RoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleResponse.Marshal(b, m, deterministic)
}
func (m *RoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleResponse.Merge(m, src)
}
func (m *RoleResponse) XXX_Size() int {
	return xxx_messageInfo_RoleResponse.Size(m)
}
func (m *RoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoleResponse proto.InternalMessageInfo

func (m *RoleResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RoleResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *RoleResponse) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RoleResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// Message for Delete Role request
type DeleteRoleRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRoleRequest) Reset()         { *m = DeleteRoleRequest{} }
func (m *DeleteRoleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRoleRequest) ProtoMessage()    {}
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb80865a74c2c62, []int{3}
}

func (m *DeleteRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRoleRequest.Unmarshal(m, b)
}
func (m *DeleteRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRoleRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRoleRequest.Merge(m, src)
}
func (m *DeleteRoleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRoleRequest.Size(m)
}
func (m *DeleteRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRoleRequest proto.InternalMessageInfo

func (m *DeleteRoleRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *DeleteRoleRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

// Message for Update Role request
type UpdateRoleRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	UpdateRequest        []byte   `protobuf:"bytes,3,opt,name=updateRequest,proto3" json:"updateRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRoleRequest) Reset()         { *m = UpdateRoleRequest{} }
func (m *UpdateRoleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRoleRequest) ProtoMessage()    {}
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb80865a74c2c62, []int{4}
}

func (m *UpdateRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRoleRequest.Unmarshal(m, b)
}
func (m *UpdateRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRoleRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRoleRequest.Merge(m, src)
}
func (m *UpdateRoleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRoleRequest.Size(m)
}
func (m *UpdateRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRoleRequest proto.InternalMessageInfo

func (m *UpdateRoleRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *UpdateRoleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRoleRequest) GetUpdateRequest() []byte {
	if m != nil {
		return m.UpdateRequest
	}
	return nil
}

func init() {
	proto.RegisterType((*RoleRequest)(nil), "RoleRequest")
	proto.RegisterType((*GetRoleRequest)(nil), "GetRoleRequest")
	proto.RegisterType((*RoleResponse)(nil), "RoleResponse")
	proto.RegisterMapType((map[string]string)(nil), "RoleResponse.HeaderEntry")
	proto.RegisterType((*DeleteRoleRequest)(nil), "DeleteRoleRequest")
	proto.RegisterType((*UpdateRoleRequest)(nil), "UpdateRoleRequest")
}

func init() { proto.RegisterFile("role/role.proto", fileDescriptor_ccb80865a74c2c62) }

var fileDescriptor_ccb80865a74c2c62 = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x41, 0x4f, 0xab, 0x40,
	0x10, 0xc7, 0x1f, 0xd0, 0xf6, 0xa5, 0x03, 0x6d, 0x5f, 0x27, 0xef, 0xc0, 0xeb, 0xe1, 0x85, 0x10,
	0x0f, 0x4d, 0x9a, 0x6c, 0xd3, 0x7a, 0x51, 0x6f, 0x5a, 0x4c, 0xed, 0xc1, 0xcb, 0xaa, 0x1f, 0x80,
	0x86, 0x89, 0x9a, 0x22, 0x5b, 0xd9, 0xc5, 0xa4, 0x5f, 0xd4, 0xcf, 0xe2, 0xd1, 0xb0, 0xa0, 0x85,
	0x60, 0x62, 0xec, 0x85, 0xec, 0xfe, 0x99, 0xf9, 0xff, 0x99, 0x5f, 0x06, 0x18, 0xa4, 0x22, 0xa6,
	0x69, 0xfe, 0x60, 0xdb, 0x54, 0x28, 0xe1, 0xdf, 0x80, 0xcd, 0x45, 0x4c, 0x9c, 0x9e, 0x33, 0x92,
	0x0a, 0x7d, 0x70, 0x24, 0x49, 0xf9, 0x28, 0x92, 0x5b, 0xb1, 0xa1, 0xc4, 0x35, 0x3c, 0x63, 0xdc,
	0xe5, 0x35, 0x0d, 0x3d, 0xb0, 0xcb, 0xf2, 0x0b, 0x11, 0xed, 0x5c, 0xd3, 0x33, 0xc6, 0x0e, 0xaf,
	0x4a, 0x7e, 0x00, 0xfd, 0x25, 0xa9, 0x9f, 0xfa, 0xf6, 0xc1, 0x5c, 0x45, 0xda, 0xae, 0xcb, 0xcd,
	0x55, 0xe4, 0xbf, 0x1a, 0xe0, 0x14, 0x1e, 0x72, 0x2b, 0x12, 0x49, 0xf8, 0x1f, 0x40, 0xaa, 0x50,
	0x65, 0x72, 0x21, 0x22, 0xd2, 0x16, 0x6d, 0x5e, 0x51, 0xf0, 0x08, 0x7a, 0xc5, 0xed, 0x9a, 0xa4,
	0x0c, 0xef, 0xa9, 0xf4, 0xaa, 0x8b, 0x38, 0x83, 0xce, 0x03, 0x85, 0x11, 0xa5, 0xae, 0xe5, 0x59,
	0x63, 0x7b, 0xfe, 0x8f, 0x55, 0x43, 0xd8, 0x95, 0x7e, 0x77, 0x99, 0xa8, 0x74, 0xc7, 0xcb, 0x42,
	0x44, 0x68, 0xad, 0xf3, 0x51, 0x5b, 0x7a, 0x54, 0x7d, 0x1e, 0x9d, 0x82, 0x5d, 0x29, 0xc5, 0x3f,
	0x60, 0x6d, 0x68, 0x57, 0xce, 0x95, 0x1f, 0xf1, 0x2f, 0xb4, 0x5f, 0xc2, 0x38, 0xfb, 0xf8, 0x8a,
	0xe2, 0x72, 0x66, 0x9e, 0x18, 0xfe, 0x12, 0x86, 0x01, 0xc5, 0xa4, 0xe8, 0x10, 0x42, 0xc1, 0x27,
	0xa1, 0xc0, 0x7f, 0x82, 0xe1, 0xdd, 0x36, 0x0a, 0x0f, 0x33, 0xaa, 0xa0, 0xce, 0xc9, 0x65, 0x85,
	0x51, 0x61, 0xe2, 0x5a, 0x7a, 0xd2, 0xba, 0x38, 0x7f, 0x33, 0xa0, 0x9d, 0x27, 0x49, 0x9c, 0x00,
	0x2c, 0x52, 0x2a, 0x83, 0xd1, 0x61, 0x95, 0xfc, 0x51, 0xaf, 0xc6, 0xd3, 0xff, 0x85, 0x13, 0xf8,
	0x5d, 0x6e, 0x03, 0x0e, 0x58, 0x7d, 0x2f, 0x9a, 0xc5, 0x53, 0xb0, 0x97, 0xa4, 0xce, 0xe3, 0xb8,
	0x08, 0xfa, 0xbe, 0x61, 0x06, 0xb0, 0x87, 0x89, 0xc8, 0x1a, 0x64, 0xbf, 0x6c, 0xd9, 0x63, 0x43,
	0x64, 0x0d, 0x86, 0x8d, 0x96, 0x75, 0x47, 0xff, 0x2d, 0xc7, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xb5, 0xc1, 0xb7, 0x97, 0x40, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RolesClient is the client API for Roles service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RolesClient interface {
	CreateRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*RoleResponse, error)
	GetRole(ctx context.Context, in *GetRoleRequest, opts ...grpc.CallOption) (*RoleResponse, error)
	GetAllRoles(ctx context.Context, in *GetRoleRequest, opts ...grpc.CallOption) (*RoleResponse, error)
	DeleteRole(ctx context.Context, in *DeleteRoleRequest, opts ...grpc.CallOption) (*RoleResponse, error)
	UpdateRole(ctx context.Context, in *UpdateRoleRequest, opts ...grpc.CallOption) (*RoleResponse, error)
}

type rolesClient struct {
	cc *grpc.ClientConn
}

func NewRolesClient(cc *grpc.ClientConn) RolesClient {
	return &rolesClient{cc}
}

func (c *rolesClient) CreateRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*RoleResponse, error) {
	out := new(RoleResponse)
	err := c.cc.Invoke(ctx, "/Roles/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) GetRole(ctx context.Context, in *GetRoleRequest, opts ...grpc.CallOption) (*RoleResponse, error) {
	out := new(RoleResponse)
	err := c.cc.Invoke(ctx, "/Roles/GetRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) GetAllRoles(ctx context.Context, in *GetRoleRequest, opts ...grpc.CallOption) (*RoleResponse, error) {
	out := new(RoleResponse)
	err := c.cc.Invoke(ctx, "/Roles/GetAllRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) DeleteRole(ctx context.Context, in *DeleteRoleRequest, opts ...grpc.CallOption) (*RoleResponse, error) {
	out := new(RoleResponse)
	err := c.cc.Invoke(ctx, "/Roles/DeleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) UpdateRole(ctx context.Context, in *UpdateRoleRequest, opts ...grpc.CallOption) (*RoleResponse, error) {
	out := new(RoleResponse)
	err := c.cc.Invoke(ctx, "/Roles/UpdateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RolesServer is the server API for Roles service.
type RolesServer interface {
	CreateRole(context.Context, *RoleRequest) (*RoleResponse, error)
	GetRole(context.Context, *GetRoleRequest) (*RoleResponse, error)
	GetAllRoles(context.Context, *GetRoleRequest) (*RoleResponse, error)
	DeleteRole(context.Context, *DeleteRoleRequest) (*RoleResponse, error)
	UpdateRole(context.Context, *UpdateRoleRequest) (*RoleResponse, error)
}

// UnimplementedRolesServer can be embedded to have forward compatible implementations.
type UnimplementedRolesServer struct {
}

func (*UnimplementedRolesServer) CreateRole(ctx context.Context, req *RoleRequest) (*RoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedRolesServer) GetRole(ctx context.Context, req *GetRoleRequest) (*RoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRole not implemented")
}
func (*UnimplementedRolesServer) GetAllRoles(ctx context.Context, req *GetRoleRequest) (*RoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllRoles not implemented")
}
func (*UnimplementedRolesServer) DeleteRole(ctx context.Context, req *DeleteRoleRequest) (*RoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (*UnimplementedRolesServer) UpdateRole(ctx context.Context, req *UpdateRoleRequest) (*RoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRole not implemented")
}

func RegisterRolesServer(s *grpc.Server, srv RolesServer) {
	s.RegisterService(&_Roles_serviceDesc, srv)
}

func _Roles_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RolesServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Roles/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RolesServer).CreateRole(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Roles_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RolesServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Roles/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RolesServer).GetRole(ctx, req.(*GetRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Roles_GetAllRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RolesServer).GetAllRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Roles/GetAllRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RolesServer).GetAllRoles(ctx, req.(*GetRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Roles_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RolesServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Roles/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RolesServer).DeleteRole(ctx, req.(*DeleteRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Roles_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RolesServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Roles/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RolesServer).UpdateRole(ctx, req.(*UpdateRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Roles_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Roles",
	HandlerType: (*RolesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRole",
			Handler:    _Roles_CreateRole_Handler,
		},
		{
			MethodName: "GetRole",
			Handler:    _Roles_GetRole_Handler,
		},
		{
			MethodName: "GetAllRoles",
			Handler:    _Roles_GetAllRoles_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _Roles_DeleteRole_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _Roles_UpdateRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "role/role.proto",
}
