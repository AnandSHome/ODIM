// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventSubRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=SessionToken,proto3" json:"SessionToken,omitempty"`
	PostBody             []byte   `protobuf:"bytes,2,opt,name=PostBody,proto3" json:"PostBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventSubRequest) Reset()         { *m = EventSubRequest{} }
func (m *EventSubRequest) String() string { return proto.CompactTextString(m) }
func (*EventSubRequest) ProtoMessage()    {}
func (*EventSubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{0}
}

func (m *EventSubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventSubRequest.Unmarshal(m, b)
}
func (m *EventSubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventSubRequest.Marshal(b, m, deterministic)
}
func (m *EventSubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSubRequest.Merge(m, src)
}
func (m *EventSubRequest) XXX_Size() int {
	return xxx_messageInfo_EventSubRequest.Size(m)
}
func (m *EventSubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventSubRequest proto.InternalMessageInfo

func (m *EventSubRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *EventSubRequest) GetPostBody() []byte {
	if m != nil {
		return m.PostBody
	}
	return nil
}

type EventSubResponse struct {
	StatusCode           int32             `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusMessage        string            `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	Location             string            `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Header               map[string]string `protobuf:"bytes,5,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EventSubResponse) Reset()         { *m = EventSubResponse{} }
func (m *EventSubResponse) String() string { return proto.CompactTextString(m) }
func (*EventSubResponse) ProtoMessage()    {}
func (*EventSubResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{1}
}

func (m *EventSubResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventSubResponse.Unmarshal(m, b)
}
func (m *EventSubResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventSubResponse.Marshal(b, m, deterministic)
}
func (m *EventSubResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSubResponse.Merge(m, src)
}
func (m *EventSubResponse) XXX_Size() int {
	return xxx_messageInfo_EventSubResponse.Size(m)
}
func (m *EventSubResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSubResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventSubResponse proto.InternalMessageInfo

func (m *EventSubResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *EventSubResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *EventSubResponse) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *EventSubResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *EventSubResponse) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

type EventRequest struct {
	SessionToken         string   `protobuf:"bytes,1,opt,name=SessionToken,proto3" json:"SessionToken,omitempty"`
	EventSubscriptionID  string   `protobuf:"bytes,2,opt,name=EventSubscriptionID,proto3" json:"EventSubscriptionID,omitempty"`
	UUID                 string   `protobuf:"bytes,3,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{2}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *EventRequest) GetEventSubscriptionID() string {
	if m != nil {
		return m.EventSubscriptionID
	}
	return ""
}

func (m *EventRequest) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type DefaultEventSubRequest struct {
	SystemID             []string `protobuf:"bytes,1,rep,name=SystemID,proto3" json:"SystemID,omitempty"`
	EventTypes           []string `protobuf:"bytes,2,rep,name=EventTypes,proto3" json:"EventTypes,omitempty"`
	MessageIDs           []string `protobuf:"bytes,3,rep,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
	ResourceTypes        []string `protobuf:"bytes,4,rep,name=ResourceTypes,proto3" json:"ResourceTypes,omitempty"`
	Protocol             string   `protobuf:"bytes,5,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultEventSubRequest) Reset()         { *m = DefaultEventSubRequest{} }
func (m *DefaultEventSubRequest) String() string { return proto.CompactTextString(m) }
func (*DefaultEventSubRequest) ProtoMessage()    {}
func (*DefaultEventSubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{3}
}

func (m *DefaultEventSubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultEventSubRequest.Unmarshal(m, b)
}
func (m *DefaultEventSubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultEventSubRequest.Marshal(b, m, deterministic)
}
func (m *DefaultEventSubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultEventSubRequest.Merge(m, src)
}
func (m *DefaultEventSubRequest) XXX_Size() int {
	return xxx_messageInfo_DefaultEventSubRequest.Size(m)
}
func (m *DefaultEventSubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultEventSubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultEventSubRequest proto.InternalMessageInfo

func (m *DefaultEventSubRequest) GetSystemID() []string {
	if m != nil {
		return m.SystemID
	}
	return nil
}

func (m *DefaultEventSubRequest) GetEventTypes() []string {
	if m != nil {
		return m.EventTypes
	}
	return nil
}

func (m *DefaultEventSubRequest) GetMessageIDs() []string {
	if m != nil {
		return m.MessageIDs
	}
	return nil
}

func (m *DefaultEventSubRequest) GetResourceTypes() []string {
	if m != nil {
		return m.ResourceTypes
	}
	return nil
}

func (m *DefaultEventSubRequest) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type DefaultEventSubResponse struct {
	TaskURL              string   `protobuf:"bytes,1,opt,name=TaskURL,proto3" json:"TaskURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultEventSubResponse) Reset()         { *m = DefaultEventSubResponse{} }
func (m *DefaultEventSubResponse) String() string { return proto.CompactTextString(m) }
func (*DefaultEventSubResponse) ProtoMessage()    {}
func (*DefaultEventSubResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{4}
}

func (m *DefaultEventSubResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultEventSubResponse.Unmarshal(m, b)
}
func (m *DefaultEventSubResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultEventSubResponse.Marshal(b, m, deterministic)
}
func (m *DefaultEventSubResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultEventSubResponse.Merge(m, src)
}
func (m *DefaultEventSubResponse) XXX_Size() int {
	return xxx_messageInfo_DefaultEventSubResponse.Size(m)
}
func (m *DefaultEventSubResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultEventSubResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultEventSubResponse proto.InternalMessageInfo

func (m *DefaultEventSubResponse) GetTaskURL() string {
	if m != nil {
		return m.TaskURL
	}
	return ""
}

type SubscribeEMBRequest struct {
	PluginID             string   `protobuf:"bytes,1,opt,name=PluginID,proto3" json:"PluginID,omitempty"`
	EMBType              string   `protobuf:"bytes,2,opt,name=EMBType,proto3" json:"EMBType,omitempty"`
	EMBQueueName         []string `protobuf:"bytes,3,rep,name=EMBQueueName,proto3" json:"EMBQueueName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeEMBRequest) Reset()         { *m = SubscribeEMBRequest{} }
func (m *SubscribeEMBRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeEMBRequest) ProtoMessage()    {}
func (*SubscribeEMBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{5}
}

func (m *SubscribeEMBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeEMBRequest.Unmarshal(m, b)
}
func (m *SubscribeEMBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeEMBRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeEMBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeEMBRequest.Merge(m, src)
}
func (m *SubscribeEMBRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeEMBRequest.Size(m)
}
func (m *SubscribeEMBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeEMBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeEMBRequest proto.InternalMessageInfo

func (m *SubscribeEMBRequest) GetPluginID() string {
	if m != nil {
		return m.PluginID
	}
	return ""
}

func (m *SubscribeEMBRequest) GetEMBType() string {
	if m != nil {
		return m.EMBType
	}
	return ""
}

func (m *SubscribeEMBRequest) GetEMBQueueName() []string {
	if m != nil {
		return m.EMBQueueName
	}
	return nil
}

type SubscribeEMBResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeEMBResponse) Reset()         { *m = SubscribeEMBResponse{} }
func (m *SubscribeEMBResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeEMBResponse) ProtoMessage()    {}
func (*SubscribeEMBResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{6}
}

func (m *SubscribeEMBResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeEMBResponse.Unmarshal(m, b)
}
func (m *SubscribeEMBResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeEMBResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeEMBResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeEMBResponse.Merge(m, src)
}
func (m *SubscribeEMBResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeEMBResponse.Size(m)
}
func (m *SubscribeEMBResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeEMBResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeEMBResponse proto.InternalMessageInfo

func (m *SubscribeEMBResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*EventSubRequest)(nil), "EventSubRequest")
	proto.RegisterType((*EventSubResponse)(nil), "EventSubResponse")
	proto.RegisterMapType((map[string]string)(nil), "EventSubResponse.HeaderEntry")
	proto.RegisterType((*EventRequest)(nil), "EventRequest")
	proto.RegisterType((*DefaultEventSubRequest)(nil), "DefaultEventSubRequest")
	proto.RegisterType((*DefaultEventSubResponse)(nil), "DefaultEventSubResponse")
	proto.RegisterType((*SubscribeEMBRequest)(nil), "SubscribeEMBRequest")
	proto.RegisterType((*SubscribeEMBResponse)(nil), "SubscribeEMBResponse")
}

func init() { proto.RegisterFile("events.proto", fileDescriptor_8f22242cb04491f9) }

var fileDescriptor_8f22242cb04491f9 = []byte{
	// 579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x6d, 0x8f, 0xd2, 0x40,
	0x10, 0xa6, 0xbc, 0xc9, 0x0d, 0x5c, 0x0e, 0xf7, 0xf0, 0x68, 0x9a, 0x78, 0x92, 0xc6, 0x0f, 0x7c,
	0x6a, 0xcc, 0x5d, 0x4c, 0xce, 0x8b, 0x26, 0x06, 0x68, 0x94, 0x44, 0xcc, 0x5d, 0x81, 0x1f, 0x50,
	0xca, 0x78, 0x36, 0x94, 0x2e, 0x76, 0xb7, 0x44, 0x7e, 0x88, 0x7f, 0xc5, 0x1f, 0xe7, 0x27, 0xb3,
	0xdb, 0x2d, 0x14, 0xa8, 0x09, 0x7e, 0xeb, 0x33, 0xb3, 0xf3, 0xcc, 0x33, 0x33, 0x4f, 0x0a, 0x0d,
	0x5c, 0x63, 0xc8, 0x99, 0xb5, 0x8a, 0x28, 0xa7, 0xe6, 0x23, 0x5c, 0xd8, 0x02, 0x8f, 0xe3, 0x99,
	0x83, 0x3f, 0x62, 0x64, 0x9c, 0x98, 0xd0, 0x18, 0x23, 0x63, 0x3e, 0x0d, 0x27, 0x74, 0x81, 0xa1,
	0xae, 0x75, 0xb4, 0xee, 0x99, 0xb3, 0x17, 0x23, 0x06, 0xd4, 0x1e, 0x28, 0xe3, 0x3d, 0x3a, 0xdf,
	0xe8, 0xc5, 0x8e, 0xd6, 0x6d, 0x38, 0x5b, 0x6c, 0xfe, 0xd1, 0xa0, 0xb9, 0xe3, 0x64, 0x2b, 0x1a,
	0x32, 0x24, 0xd7, 0x00, 0x8c, 0xbb, 0x3c, 0x66, 0x7d, 0x3a, 0x47, 0x49, 0x59, 0x71, 0x32, 0x11,
	0xf2, 0x1a, 0xce, 0x13, 0x34, 0x42, 0xc6, 0xdc, 0x27, 0x94, 0xac, 0x67, 0xce, 0x7e, 0x50, 0xb4,
	0x0d, 0xa8, 0xe7, 0x72, 0x9f, 0x86, 0x7a, 0x49, 0x3e, 0xd8, 0x62, 0x42, 0xa0, 0x3c, 0x13, 0x72,
	0xca, 0x52, 0x8e, 0xfc, 0x26, 0x6f, 0xa1, 0xfa, 0x1d, 0xdd, 0x39, 0x46, 0x7a, 0xa5, 0x53, 0xea,
	0xd6, 0x6f, 0x5e, 0x5a, 0x87, 0xc2, 0xac, 0xcf, 0x32, 0x6f, 0x87, 0x3c, 0xda, 0x38, 0xea, 0xb1,
	0xf1, 0x0e, 0xea, 0x99, 0x30, 0x69, 0x42, 0x69, 0x81, 0x1b, 0xb5, 0x07, 0xf1, 0x49, 0x5a, 0x50,
	0x59, 0xbb, 0x41, 0x9c, 0xaa, 0x4c, 0xc0, 0x7d, 0xf1, 0x4e, 0x33, 0x7f, 0x42, 0x43, 0xb6, 0xf8,
	0x9f, 0x65, 0xbe, 0x81, 0xcb, 0x54, 0x16, 0xf3, 0x22, 0x7f, 0x25, 0xc6, 0x19, 0x0e, 0x14, 0x77,
	0x5e, 0x4a, 0xcc, 0x3a, 0x9d, 0x0e, 0x07, 0x6a, 0x07, 0xf2, 0xdb, 0xfc, 0xad, 0xc1, 0xd5, 0x00,
	0xbf, 0xb9, 0x71, 0xc0, 0x0f, 0x2f, 0x6a, 0x40, 0x6d, 0xbc, 0x61, 0x1c, 0x97, 0xc3, 0x81, 0xae,
	0x75, 0x4a, 0x62, 0x6d, 0x29, 0x16, 0x87, 0x91, 0xcf, 0x27, 0x9b, 0x15, 0x32, 0xbd, 0x28, 0xb3,
	0x99, 0x88, 0xc8, 0xab, 0xed, 0x0f, 0x07, 0x4c, 0x2f, 0x25, 0xf9, 0x5d, 0x44, 0x1c, 0xce, 0x41,
	0x46, 0xe3, 0xc8, 0xc3, 0x84, 0xa2, 0x2c, 0x9f, 0xec, 0x07, 0xa5, 0x5f, 0x84, 0xdf, 0x3c, 0x1a,
	0xe8, 0x95, 0xe4, 0x70, 0x29, 0x36, 0x6f, 0xa1, 0x7d, 0xa4, 0x5b, 0xb9, 0x46, 0x87, 0x67, 0x13,
	0x97, 0x2d, 0xa6, 0xce, 0x17, 0xb5, 0xb8, 0x14, 0x9a, 0x14, 0x2e, 0xd5, 0x4e, 0x66, 0x68, 0x8f,
	0x7a, 0x99, 0x49, 0x1f, 0x82, 0xf8, 0xc9, 0x0f, 0xe5, 0xa4, 0x49, 0x1f, 0x85, 0x05, 0x99, 0x3d,
	0xea, 0x09, 0x3d, 0x6a, 0xb5, 0x29, 0x14, 0x47, 0xb2, 0x47, 0xbd, 0xc7, 0x18, 0x63, 0xfc, 0xea,
	0x2e, 0x51, 0x4d, 0xb9, 0x17, 0x33, 0x2d, 0x68, 0xed, 0x37, 0x54, 0x12, 0xaf, 0xa0, 0x3a, 0x96,
	0x1e, 0x95, 0xfd, 0x6a, 0x8e, 0x42, 0x37, 0xbf, 0xca, 0x50, 0x95, 0xf3, 0x30, 0x72, 0x07, 0x17,
	0x9f, 0x50, 0x0d, 0x87, 0xd1, 0xda, 0xf7, 0x90, 0x34, 0xad, 0x83, 0x1b, 0x19, 0xcf, 0x8f, 0xac,
	0x69, 0x16, 0x44, 0xe5, 0x38, 0x9e, 0x2d, 0x7d, 0x3e, 0x41, 0x96, 0x10, 0x9c, 0x5a, 0xf9, 0x11,
	0xda, 0xfd, 0x08, 0x5d, 0x8e, 0x47, 0xf6, 0x39, 0x95, 0xe1, 0x1e, 0x5a, 0x5b, 0xd5, 0xd9, 0xf2,
	0x73, 0x2b, 0x6b, 0xf0, 0xfc, 0xda, 0x0f, 0xe2, 0xa4, 0x01, 0xe6, 0x75, 0x3f, 0xa5, 0x7c, 0x0a,
	0xd7, 0x89, 0xf8, 0x03, 0x5f, 0xec, 0x58, 0xda, 0x56, 0xbe, 0xd5, 0x0d, 0xdd, 0xfa, 0x87, 0x97,
	0xcc, 0x02, 0xb1, 0xe1, 0x55, 0xde, 0x44, 0xac, 0x4f, 0x83, 0x00, 0xbd, 0x93, 0xd5, 0xbd, 0x87,
	0xba, 0x28, 0x57, 0x46, 0x20, 0x2d, 0x2b, 0xc7, 0x88, 0xc6, 0x0b, 0x2b, 0xcf, 0x2d, 0x66, 0x61,
	0x56, 0x95, 0xff, 0xdd, 0xdb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x33, 0x1c, 0x3c, 0x08, 0x87,
	0x05, 0x00, 0x00,
}
