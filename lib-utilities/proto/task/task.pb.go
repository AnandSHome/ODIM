// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task/task.proto

package task

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Payload struct {
	HTTPHeaders          map[string]string `protobuf:"bytes,1,rep,name=HTTPHeaders,proto3" json:"HTTPHeaders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HTTPOperation        string            `protobuf:"bytes,2,opt,name=HTTPOperation,proto3" json:"HTTPOperation,omitempty"`
	JSONBody             string            `protobuf:"bytes,3,opt,name=JSONBody,proto3" json:"JSONBody,omitempty"`
	StatusCode           int32             `protobuf:"varint,4,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	TargetURI            string            `protobuf:"bytes,5,opt,name=TargetURI,proto3" json:"TargetURI,omitempty"`
	ResponseBody         []byte            `protobuf:"bytes,6,opt,name=ResponseBody,proto3" json:"ResponseBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{0}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetHTTPHeaders() map[string]string {
	if m != nil {
		return m.HTTPHeaders
	}
	return nil
}

func (m *Payload) GetHTTPOperation() string {
	if m != nil {
		return m.HTTPOperation
	}
	return ""
}

func (m *Payload) GetJSONBody() string {
	if m != nil {
		return m.JSONBody
	}
	return ""
}

func (m *Payload) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Payload) GetTargetURI() string {
	if m != nil {
		return m.TargetURI
	}
	return ""
}

func (m *Payload) GetResponseBody() []byte {
	if m != nil {
		return m.ResponseBody
	}
	return nil
}

type GetTaskRequest struct {
	TaskID               string   `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	SubTaskID            string   `protobuf:"bytes,2,opt,name=subTaskID,proto3" json:"subTaskID,omitempty"`
	SessionToken         string   `protobuf:"bytes,3,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{1}
}

func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskRequest.Unmarshal(m, b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(m, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskRequest.Size(m)
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *GetTaskRequest) GetSubTaskID() string {
	if m != nil {
		return m.SubTaskID
	}
	return ""
}

func (m *GetTaskRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type TaskResponse struct {
	StatusCode           int32             `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusMessage        string            `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	Header               map[string]string `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TaskResponse) Reset()         { *m = TaskResponse{} }
func (m *TaskResponse) String() string { return proto.CompactTextString(m) }
func (*TaskResponse) ProtoMessage()    {}
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{2}
}

func (m *TaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskResponse.Unmarshal(m, b)
}
func (m *TaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskResponse.Marshal(b, m, deterministic)
}
func (m *TaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskResponse.Merge(m, src)
}
func (m *TaskResponse) XXX_Size() int {
	return xxx_messageInfo_TaskResponse.Size(m)
}
func (m *TaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskResponse proto.InternalMessageInfo

func (m *TaskResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *TaskResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *TaskResponse) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TaskResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type CreateTaskRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	ParentTaskID         string   `protobuf:"bytes,2,opt,name=parentTaskID,proto3" json:"parentTaskID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{3}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *CreateTaskRequest) GetParentTaskID() string {
	if m != nil {
		return m.ParentTaskID
	}
	return ""
}

type CreateTaskResponse struct {
	TaskURI              string   `protobuf:"bytes,1,opt,name=taskURI,proto3" json:"taskURI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskResponse) Reset()         { *m = CreateTaskResponse{} }
func (m *CreateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTaskResponse) ProtoMessage()    {}
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{4}
}

func (m *CreateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskResponse.Unmarshal(m, b)
}
func (m *CreateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskResponse.Marshal(b, m, deterministic)
}
func (m *CreateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskResponse.Merge(m, src)
}
func (m *CreateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTaskResponse.Size(m)
}
func (m *CreateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskResponse proto.InternalMessageInfo

func (m *CreateTaskResponse) GetTaskURI() string {
	if m != nil {
		return m.TaskURI
	}
	return ""
}

type UpdateTaskRequest struct {
	TaskID               string                 `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TaskState            string                 `protobuf:"bytes,2,opt,name=taskState,proto3" json:"taskState,omitempty"`
	TaskStatus           string                 `protobuf:"bytes,3,opt,name=taskStatus,proto3" json:"taskStatus,omitempty"`
	PercentComplete      int32                  `protobuf:"varint,4,opt,name=percentComplete,proto3" json:"percentComplete,omitempty"`
	PayLoad              *Payload               `protobuf:"bytes,5,opt,name=payLoad,proto3" json:"payLoad,omitempty"`
	EndTime              *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{5}
}

func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(m, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *UpdateTaskRequest) GetTaskState() string {
	if m != nil {
		return m.TaskState
	}
	return ""
}

func (m *UpdateTaskRequest) GetTaskStatus() string {
	if m != nil {
		return m.TaskStatus
	}
	return ""
}

func (m *UpdateTaskRequest) GetPercentComplete() int32 {
	if m != nil {
		return m.PercentComplete
	}
	return 0
}

func (m *UpdateTaskRequest) GetPayLoad() *Payload {
	if m != nil {
		return m.PayLoad
	}
	return nil
}

func (m *UpdateTaskRequest) GetEndTime() *timestamppb.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type UpdateTaskResponse struct {
	StatusMessage        string   `protobuf:"bytes,1,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskResponse) Reset()         { *m = UpdateTaskResponse{} }
func (m *UpdateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskResponse) ProtoMessage()    {}
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8f2b86464a95fe, []int{6}
}

func (m *UpdateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskResponse.Unmarshal(m, b)
}
func (m *UpdateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskResponse.Merge(m, src)
}
func (m *UpdateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskResponse.Size(m)
}
func (m *UpdateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskResponse proto.InternalMessageInfo

func (m *UpdateTaskResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*Payload)(nil), "Payload")
	proto.RegisterMapType((map[string]string)(nil), "Payload.HTTPHeadersEntry")
	proto.RegisterType((*GetTaskRequest)(nil), "GetTaskRequest")
	proto.RegisterType((*TaskResponse)(nil), "TaskResponse")
	proto.RegisterMapType((map[string]string)(nil), "TaskResponse.HeaderEntry")
	proto.RegisterType((*CreateTaskRequest)(nil), "CreateTaskRequest")
	proto.RegisterType((*CreateTaskResponse)(nil), "CreateTaskResponse")
	proto.RegisterType((*UpdateTaskRequest)(nil), "UpdateTaskRequest")
	proto.RegisterType((*UpdateTaskResponse)(nil), "UpdateTaskResponse")
}

func init() { proto.RegisterFile("task/task.proto", fileDescriptor_8e8f2b86464a95fe) }

var fileDescriptor_8e8f2b86464a95fe = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0x9b, 0x34, 0x49, 0x27, 0x6d, 0xd3, 0x6e, 0x11, 0x32, 0x16, 0x82, 0xc8, 0xe2, 0x21,
	0x0f, 0x68, 0x23, 0x02, 0x52, 0xa1, 0x20, 0x1e, 0x48, 0x51, 0x5b, 0x44, 0x7f, 0xe4, 0xb8, 0x07,
	0xd8, 0xd4, 0x43, 0x6a, 0xe2, 0x78, 0x8d, 0x77, 0x5d, 0x29, 0x67, 0xe1, 0x06, 0x1c, 0x88, 0x5b,
	0x70, 0x07, 0xb4, 0x5e, 0xbb, 0xb6, 0x13, 0x84, 0x92, 0x97, 0x68, 0xe7, 0xdb, 0x6f, 0xc6, 0x3b,
	0xdf, 0x7c, 0x13, 0xe8, 0x48, 0x26, 0xa6, 0x7d, 0xf5, 0x43, 0xa3, 0x98, 0x4b, 0x6e, 0x3d, 0x9f,
	0x70, 0x3e, 0x09, 0xb0, 0x9f, 0x46, 0xe3, 0xe4, 0x5b, 0x5f, 0xfa, 0x33, 0x14, 0x92, 0xcd, 0x22,
	0x4d, 0xb0, 0x7f, 0x6d, 0x42, 0xf3, 0x9a, 0xcd, 0x03, 0xce, 0x3c, 0xf2, 0x1e, 0xda, 0x67, 0xae,
	0x7b, 0x7d, 0x86, 0xcc, 0xc3, 0x58, 0x98, 0x46, 0xb7, 0xd6, 0x6b, 0x0f, 0x9e, 0xd0, 0xec, 0x9a,
	0x96, 0xee, 0x3e, 0x87, 0x32, 0x9e, 0x3b, 0x65, 0x36, 0x79, 0x01, 0xbb, 0x2a, 0xbc, 0x8a, 0x30,
	0x66, 0xd2, 0xe7, 0xa1, 0xb9, 0xd9, 0x35, 0x7a, 0xdb, 0x4e, 0x15, 0x24, 0x16, 0xb4, 0xbe, 0x8c,
	0xae, 0x2e, 0x3f, 0x71, 0x6f, 0x6e, 0xd6, 0x52, 0xc2, 0x43, 0x4c, 0x9e, 0x01, 0x8c, 0x24, 0x93,
	0x89, 0x18, 0x72, 0x0f, 0xcd, 0x7a, 0xd7, 0xe8, 0x6d, 0x39, 0x25, 0x84, 0x3c, 0x85, 0x6d, 0x97,
	0xc5, 0x13, 0x94, 0x37, 0xce, 0xb9, 0xb9, 0x95, 0x26, 0x17, 0x00, 0xb1, 0x61, 0xc7, 0x41, 0x11,
	0xf1, 0x50, 0x60, 0x5a, 0xbd, 0xd1, 0x35, 0x7a, 0x3b, 0x4e, 0x05, 0xb3, 0x3e, 0xc2, 0xfe, 0x62,
	0x13, 0x64, 0x1f, 0x6a, 0x53, 0x9c, 0x9b, 0x46, 0x5a, 0x4f, 0x1d, 0xc9, 0x23, 0xd8, 0xba, 0x67,
	0x41, 0x82, 0x59, 0x07, 0x3a, 0x38, 0xde, 0x7c, 0x6b, 0xd8, 0xdf, 0x61, 0xef, 0x14, 0xa5, 0xcb,
	0xc4, 0xd4, 0xc1, 0x1f, 0x09, 0x0a, 0x49, 0x1e, 0x43, 0x43, 0xa9, 0x7d, 0x7e, 0x92, 0x15, 0xc8,
	0x22, 0xf5, 0x56, 0x91, 0x8c, 0x5d, 0x7d, 0xa5, 0xeb, 0x14, 0x80, 0x7a, 0xab, 0x40, 0x21, 0x7c,
	0x1e, 0xba, 0x7c, 0x8a, 0x61, 0xa6, 0x44, 0x05, 0xb3, 0x7f, 0x1b, 0xb0, 0xa3, 0xbf, 0xa4, 0x1b,
	0x50, 0xf2, 0x88, 0x42, 0x1e, 0x43, 0xcb, 0x53, 0x20, 0x6a, 0x00, 0x3a, 0xba, 0x40, 0x21, 0xd8,
	0x24, 0x7f, 0x7e, 0x15, 0x24, 0xaf, 0xa0, 0x71, 0x97, 0xb6, 0x6f, 0xd6, 0xb2, 0xf1, 0x96, 0x3f,
	0x42, 0xb5, 0x34, 0x7a, 0xbc, 0x19, 0x91, 0x10, 0xa8, 0x8f, 0x95, 0xa2, 0xf5, 0x54, 0xd1, 0xf4,
	0x6c, 0xbd, 0x83, 0x76, 0x89, 0xba, 0x96, 0x88, 0x23, 0x38, 0x18, 0xc6, 0xc8, 0x24, 0x96, 0x75,
	0xb4, 0xa0, 0x95, 0x08, 0x8c, 0x2f, 0xd9, 0x0c, 0xb3, 0x2a, 0x0f, 0xb1, 0x52, 0x2b, 0x62, 0x31,
	0x86, 0xb2, 0x22, 0x67, 0x05, 0xb3, 0x29, 0x90, 0x72, 0xd1, 0x4c, 0x32, 0x13, 0x9a, 0x6a, 0x1e,
	0xca, 0x2f, 0xba, 0x68, 0x1e, 0xda, 0x7f, 0x0c, 0x38, 0xb8, 0x89, 0xbc, 0x85, 0x57, 0xfc, 0x67,
	0x9a, 0xea, 0xa4, 0xbc, 0x98, 0x37, 0x54, 0x00, 0x6a, 0x30, 0x79, 0x90, 0x88, 0x6c, 0x96, 0x25,
	0x84, 0xf4, 0xa0, 0x13, 0x61, 0x7c, 0x8b, 0xa1, 0x1c, 0xf2, 0x59, 0x14, 0xa0, 0xcc, 0xcd, 0xbd,
	0x08, 0x13, 0x1b, 0x9a, 0x11, 0x9b, 0x7f, 0xe5, 0xcc, 0x4b, 0xfd, 0xdd, 0x1e, 0xb4, 0xf2, 0xe5,
	0x73, 0xf2, 0x0b, 0xf2, 0x06, 0x9a, 0x18, 0x7a, 0xae, 0x3f, 0xc3, 0xd4, 0xe2, 0xed, 0x81, 0x45,
	0xf5, 0x8e, 0xd3, 0x7c, 0xc7, 0xa9, 0x9b, 0xef, 0xb8, 0x93, 0x53, 0xed, 0x63, 0x20, 0xe5, 0x76,
	0x33, 0x7d, 0x96, 0x2c, 0x63, 0xfc, 0xc3, 0x32, 0x83, 0x9f, 0xf5, 0x07, 0xdb, 0x8f, 0x30, 0xbe,
	0xf7, 0x6f, 0x91, 0x50, 0x80, 0x13, 0x54, 0x4f, 0x56, 0x20, 0xe9, 0xd0, 0xea, 0x56, 0x58, 0xbb,
	0x15, 0x53, 0xd9, 0x1b, 0xe4, 0x25, 0xb4, 0x32, 0x8a, 0x58, 0x81, 0xdd, 0x87, 0xf6, 0x29, 0xca,
	0x91, 0x5e, 0x97, 0x55, 0x12, 0x28, 0x40, 0x91, 0xb0, 0x02, 0x7f, 0x00, 0x7b, 0x0a, 0x19, 0xf2,
	0x20, 0xc0, 0xdb, 0xf4, 0x7f, 0x69, 0xa5, 0x9c, 0x05, 0x11, 0xd6, 0xc9, 0xb9, 0xe0, 0xa1, 0x2f,
	0x79, 0xbc, 0x42, 0xce, 0x11, 0x40, 0xe1, 0x64, 0x42, 0xe8, 0xd2, 0xae, 0x58, 0x87, 0x74, 0xd9,
	0xea, 0xf6, 0x06, 0xf9, 0x00, 0x1d, 0x8d, 0x0f, 0xef, 0xfc, 0xc0, 0x5b, 0x37, 0xfb, 0x08, 0xa0,
	0x30, 0x08, 0x21, 0x74, 0x69, 0x39, 0xac, 0x43, 0xba, 0xec, 0x20, 0x7b, 0x63, 0xdc, 0x48, 0x6d,
	0xf7, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54, 0xa3, 0x94, 0xe5, 0x7b, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GetTaskServiceClient is the client API for GetTaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetTaskServiceClient interface {
	DeleteTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error)
	GetTasks(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error)
	GetSubTasks(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error)
	GetSubTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error)
	TaskCollection(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error)
	GetTaskService(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error)
	GetTaskMonitor(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error)
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error)
	CreateChildTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error)
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error)
}

type getTaskServiceClient struct {
	cc *grpc.ClientConn
}

func NewGetTaskServiceClient(cc *grpc.ClientConn) GetTaskServiceClient {
	return &getTaskServiceClient{cc}
}

func (c *getTaskServiceClient) DeleteTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) GetTasks(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/GetTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) GetSubTasks(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/GetSubTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) GetSubTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/GetSubTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) TaskCollection(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/TaskCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) GetTaskService(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/GetTaskService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) GetTaskMonitor(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskResponse, error) {
	out := new(TaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/GetTaskMonitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error) {
	out := new(CreateTaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) CreateChildTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*CreateTaskResponse, error) {
	out := new(CreateTaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/CreateChildTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getTaskServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error) {
	out := new(UpdateTaskResponse)
	err := c.cc.Invoke(ctx, "/GetTaskService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetTaskServiceServer is the server API for GetTaskService service.
type GetTaskServiceServer interface {
	DeleteTask(context.Context, *GetTaskRequest) (*TaskResponse, error)
	GetTasks(context.Context, *GetTaskRequest) (*TaskResponse, error)
	GetSubTasks(context.Context, *GetTaskRequest) (*TaskResponse, error)
	GetSubTask(context.Context, *GetTaskRequest) (*TaskResponse, error)
	TaskCollection(context.Context, *GetTaskRequest) (*TaskResponse, error)
	GetTaskService(context.Context, *GetTaskRequest) (*TaskResponse, error)
	GetTaskMonitor(context.Context, *GetTaskRequest) (*TaskResponse, error)
	CreateTask(context.Context, *CreateTaskRequest) (*CreateTaskResponse, error)
	CreateChildTask(context.Context, *CreateTaskRequest) (*CreateTaskResponse, error)
	UpdateTask(context.Context, *UpdateTaskRequest) (*UpdateTaskResponse, error)
}

// UnimplementedGetTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGetTaskServiceServer struct {
}

func (*UnimplementedGetTaskServiceServer) DeleteTask(ctx context.Context, req *GetTaskRequest) (*TaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedGetTaskServiceServer) GetTasks(ctx context.Context, req *GetTaskRequest) (*TaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTasks not implemented")
}
func (*UnimplementedGetTaskServiceServer) GetSubTasks(ctx context.Context, req *GetTaskRequest) (*TaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubTasks not implemented")
}
func (*UnimplementedGetTaskServiceServer) GetSubTask(ctx context.Context, req *GetTaskRequest) (*TaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubTask not implemented")
}
func (*UnimplementedGetTaskServiceServer) TaskCollection(ctx context.Context, req *GetTaskRequest) (*TaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskCollection not implemented")
}
func (*UnimplementedGetTaskServiceServer) GetTaskService(ctx context.Context, req *GetTaskRequest) (*TaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskService not implemented")
}
func (*UnimplementedGetTaskServiceServer) GetTaskMonitor(ctx context.Context, req *GetTaskRequest) (*TaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskMonitor not implemented")
}
func (*UnimplementedGetTaskServiceServer) CreateTask(ctx context.Context, req *CreateTaskRequest) (*CreateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedGetTaskServiceServer) CreateChildTask(ctx context.Context, req *CreateTaskRequest) (*CreateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChildTask not implemented")
}
func (*UnimplementedGetTaskServiceServer) UpdateTask(ctx context.Context, req *UpdateTaskRequest) (*UpdateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}

func RegisterGetTaskServiceServer(s *grpc.Server, srv GetTaskServiceServer) {
	s.RegisterService(&_GetTaskService_serviceDesc, srv)
}

func _GetTaskService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).DeleteTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_GetTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).GetTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/GetTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).GetTasks(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_GetSubTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).GetSubTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/GetSubTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).GetSubTasks(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_GetSubTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).GetSubTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/GetSubTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).GetSubTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_TaskCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).TaskCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/TaskCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).TaskCollection(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_GetTaskService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).GetTaskService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/GetTaskService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).GetTaskService(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_GetTaskMonitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).GetTaskMonitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/GetTaskMonitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).GetTaskMonitor(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_CreateChildTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).CreateChildTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/CreateChildTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).CreateChildTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetTaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetTaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServiceServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetTaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GetTaskService",
	HandlerType: (*GetTaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteTask",
			Handler:    _GetTaskService_DeleteTask_Handler,
		},
		{
			MethodName: "GetTasks",
			Handler:    _GetTaskService_GetTasks_Handler,
		},
		{
			MethodName: "GetSubTasks",
			Handler:    _GetTaskService_GetSubTasks_Handler,
		},
		{
			MethodName: "GetSubTask",
			Handler:    _GetTaskService_GetSubTask_Handler,
		},
		{
			MethodName: "TaskCollection",
			Handler:    _GetTaskService_TaskCollection_Handler,
		},
		{
			MethodName: "GetTaskService",
			Handler:    _GetTaskService_GetTaskService_Handler,
		},
		{
			MethodName: "GetTaskMonitor",
			Handler:    _GetTaskService_GetTaskMonitor_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _GetTaskService_CreateTask_Handler,
		},
		{
			MethodName: "CreateChildTask",
			Handler:    _GetTaskService_CreateChildTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _GetTaskService_UpdateTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task/task.proto",
}
